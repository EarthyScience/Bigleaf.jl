var documenterSearchIndex = {"docs":
[{"location":"metorological_variables/#Meteorological-variables","page":"-","title":"Meteorological variables","text":"","category":"section"},{"location":"metorological_variables/","page":"-","title":"-","text":"Pages = [\"metorological_variables.md\",]","category":"page"},{"location":"metorological_variables/","page":"-","title":"-","text":"latent_heat_vaporization\nvirtual_temp\nEsat_slope","category":"page"},{"location":"metorological_variables/#bigleaf.latent_heat_vaporization","page":"-","title":"bigleaf.latent_heat_vaporization","text":"latent_heat_vaporization(Tair)\n\n\nLatent heat of vaporization as a function of air temperature using \n\nlambda = (2501 - 000237  Tair) 10^6.\n\nArguments:\n\nTair:  Air temperature (deg C)\n\nValue\n\nlambda: Latent heat of vaporization (J kg-1) \n\nReferences\n\nStull, B, 1988: An Introduction to Boundary Layer Meteorology (p641)           Kluwer Academic Publishers, Dordrecht, Netherlands            \nFoken, T, 2008: Micrometeorology_ Springer, Berlin, Germany\n\nlatent_heat_vaporization.(range(5,45,5))        \n\n\n\n\n\n","category":"function"},{"location":"metorological_variables/#bigleaf.Esat_slope","page":"-","title":"bigleaf.Esat_slope","text":"Esat_slope(Tair; formula, constants) \nEsat_from_Tair(Tair; formula, constants) \nEsat_from_Tair_deriv(Tair; formula, constants)\n\nSaturation Vapor Pressure (Esat) and Slope of the Esat Curve\n\nArguemtns\n\nTair:      Air temperature (deg C)\nformula=Val(:Sonntag_1990):   Formula to be used. Either   Val(:Sonntag_1990) (Default), Val(:Alduchov_1996, or Val(:Allen_1998).\nconstants=bigleaf_constants(): Dictionary with entry  :Pa2kPa -  conversion pascal (Pa) to kilopascal\n\nDetails\n\nEsat (kPa) is calculated using the Magnus equation:\n\nEsat = a * exp((b * Tair) / (c + Tair)) / 1000 where the coefficients a, b, c take different values depending on the formula use The default values are from Sonntag 1990 (a=611.2, b=17.62, c=243.12). This versi of the Magnus equation is recommended by the WMO (WMO 2008; p1.4-29). Alternativel parameter values determined by Alduchov & Eskridge 1996 or Allen et al. 1998 can b used (see references). The slope of the Esat curve (Delta) is calculated as the first derivative of the function:\n\nDelta = dEsat over dTair\n\nValue\n\nEsat_from_Tair: Saturation vapor pressure (kPa)\nEsat_from_Tair_deriv: Slope of the saturation vapor pressure curve (kPa K-1)\nEsat_slope: A tuple of the two above values\n\nReferences\n\nSonntag D. 1990: Important new values of the physical constants of 1986, vapor  pressure formulations based on the ITS-90 and psychrometric formulae.  Zeitschrift fuer Meteorologie 70, 340-344.\n\nWorld Meteorological Organization 2008: Guide to Meteorological Instruments and Methods of Observation (WMO-No.8). World Meteorological Organization, Geneva. 7th Edition,\n\nAlduchov, O. A. & Eskridge, R. E., 1996: Improved Magnus form approximation of  saturation vapor pressure. Journal of Applied Meteorology, 35, 601-609\n\nAllen, R.G., Pereira, L.S., Raes, D., Smith, M., 1998: Crop evapotranspiration - Guidelines for computing crop water requirements - FAO irrigation and drainage paper 56, FAO, Rome.\n\nEsat_from_Tair(20.0)          # Esat in kPa\nEsat_from_Tair_deriv(20.0)    # its derivative to temperature in kPa K-1\nEsat_slope(20.0)              # both as a tuple\n\n\n\n\n\n","category":"function"},{"location":"unit_conversions/#Unit-conversions","page":"-","title":"Unit conversions","text":"","category":"section"},{"location":"unit_conversions/","page":"-","title":"-","text":"Pages = [\"unit_conversions.md\",]","category":"page"},{"location":"unit_conversions/","page":"-","title":"-","text":"LE_to_ET\nms_to_mol\nVPD_to_rH\nRg_to_PPFD\nkg_to_mol\numolCO2_to_gC","category":"page"},{"location":"unit_conversions/#bigleaf.LE_to_ET","page":"-","title":"bigleaf.LE_to_ET","text":"LE_to_ET(LE,Tair)\nET_to_LE(ET,Tair)\n\nConvert evaporative water flux from mass (ET=evapotranspiration)              to energy (LE=latent heat flux) units, or vice versa.\n\nArguments\n\nLE   Latent heat flux (W m-2)\nET   Evapotranspiration (kg m-2 s-1)\nTair Air temperature (deg C)\n\nDetails\n\nThe conversions are given by:\n\nET = LElambda\nLE = lambda ET\n\nwhere lambda is the latent heat of vaporization (J kg-1) as calculated by latent_heat_vaporization.\n\nExamples\n\n# LE of 200 Wm-2 and air temperature of 25degC\nLE_to_ET(200,25)\n\nx = linspace(-π, π) # hide\nplot(x, f(x), color = \"red\")\nsavefig(\"f-plot.svg\"); \n\n\n\n\n\n","category":"function"},{"location":"unit_conversions/#bigleaf.ms_to_mol","page":"-","title":"bigleaf.ms_to_mol","text":"ms_to_mol(G_ms,Tair,pressure; constants=bigleaf_constants())\nmol_to_ms(G_mol,Tair,pressure; constants=bigleaf_constants())\n\nConverts conductances from mass (m s-1) to molar units (mol m-2 s-1), or vice versa\n\nDetails\n\nThe conversions are given by\n\nG_mol = G_ms   pressure  (Rgas  Tair)\nG_ms = G_mol   (Rgas  Tair)  pressure\n\nwhere Tair is in Kelvin and pressure in Pa (converted from kPa internally).\n\nReferences\n\nJones, HG 1992_ Plants and microclimate: a quantitative approach to    environmental plant physiology_   2nd Edition, Cambridge University Press, Cambridge 428 \n\nms_to_mol(0.005,25,100)\n\n\n\n\n\n","category":"function"},{"location":"unit_conversions/#bigleaf.VPD_to_rH","page":"-","title":"bigleaf.VPD_to_rH","text":"VPD_to_rH(VPD,Tair; ...)\nH_to_VPD(rH,Tair; ...)\ne_to_rH(e,Tair; ...)\nVPD_to_e(VPD,Tair; ...)\ne_to_VPD(e,Tair; ...)\ne_to_q(e,pressure; ...)\nq_to_e(q,pressure; ...)\nq_to_VPD(q,Tair,pressure; ...)\nVPD_to_q(VPD,Tair,pressure; ...)\n\nConversion between vapor pressure (e), vapor pressure deficit (VPD),              specific humidity (q), and relative humidity (rH).\n\nArguments\n\nTair:      Air temperature (deg C)\npressure:  Atmospheric pressure (kPa)\ne:         Vapor pressure (kPa)\nq:        Specific humidity (kg kg-1)\nVPD:       Vapor pressure deficit (kPa)\nrH:        Relative humidity (-)\n\nAll functions accept the optional arguemtns:\n\nEsat_formula: formula used in Esat_from_Tair\nconstants: dictionary from bigleaf_constants with entries eps and Pa2kPa\n\nRreferences\n\nFoken, T, 2008: Micrometeorology_ Springer, Berlin, Germany.\n\n\n\n\n\n","category":"function"},{"location":"unit_conversions/#bigleaf.Rg_to_PPFD","page":"-","title":"bigleaf.Rg_to_PPFD","text":"Rg_to_PPFD(Rg,J_to_mol=4.6,frac_PAR=0.5)\nPPFD_to_Rg(PPFD,J_to_mol=4.6,frac_PAR=0.5)\n\nConversions between Global Radiation (W m-2) and Photosynthetic Photon Flux  Density (umol m-2 s-1)\n\nArguments\n\nRg:       Global radiation = incoming short-wave radiation at the surface (W m-2)\nPPFD:     Photosynthetic photon flux density (umol m-2 s-1)\nJtomol: Conversion factor from J m-2 s-1 (= W m-2) to umol (quanta) m-2 s-1\nfrac_PAR: Fraction of incoming solar irradiance that is photosynthetical-           active radiation (PAR); defaults to 0.5\n\nDetails\n\nThe conversion is given by:\n\nPPFD = Rg * frac_PAR * J_to_mol\n\nby default, the combined conversion factor (frac_PAR * J_to_mol) is 2.3\n\nExamples\n\n# convert a measured incoming short-wave radiation of 500 Wm-2 to\n# PPFD in umol m-2 s-1 and backwards\nRg_to_PPFD(500)\nPPFD_to_Rg(1150)\n\n\n\n\n\n","category":"function"},{"location":"unit_conversions/#bigleaf.kg_to_mol","page":"-","title":"bigleaf.kg_to_mol","text":"kg_to_mol(mass, molarMass=bigleaf_constants()[:H2Omol])\n\nConversion between Mass (kg) and Molar Units (mol).\n\n\n\n\n\n","category":"function"},{"location":"unit_conversions/#bigleaf.umolCO2_to_gC","page":"-","title":"bigleaf.umolCO2_to_gC","text":"umolCO2_to_gC(CO2_flux; constants=bigleaf_constants())\ngC_to_umolCO2(C_flux; constants=bigleaf_constants())\n\nConvert CO2 quantities from (umol CO2 m-2 s-1) to (g C m-2 d-1) and vice versa.\n\nArguments\n\nCO2_flux  CO2 flux (umol CO2 m-2 s-1)\nC_flux    Carbon (C) flux (gC m-2 d-1)\nconstants: dictionary from bigleaf_constants with entries: Cmol, umol2mol, mol2umol, kg2g, g2kg, says2seconds\n\nExamples\n\numolCO2_to_gC(20)  # gC m-2 d-1\n\n\n\n\n\n","category":"function"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"This vignette is a short introduction to the functionalities of the bigleaf.jl package.  It is directed to first-time package users who are familiar with the basic concepts of Julia.  After presenting the use of several key functions of the package,  some useful hints and guidelines are given at the end of the vignette.","category":"page"},{"location":"walkthrough/#Package-scope-and-important-conceptual-considerations","page":"Walkthrough","title":"Package scope and important conceptual considerations","text":"","category":"section"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"bigleaf.jl calculates physical and physiological ecosystem properties from eddy covariance data. Examples for such properties are aerodynamic and surface conductance, surface conditions(e.g. temperature, VPD), wind profile, roughness parameters, vegetation-atmosphere decoupling, potential evapotranspiration, (intrinsic) water-use efficiency, stomatal sensitivity to VPD, or intercellular CO2 concentration.  All calculations in the bigleaf.jl package assume that the ecosystem behaves like a  \"big-leaf\", i.e. a single, homogenous plane which acts as the only source and sink of the measured fluxes. This assumption comes with the advantages that calculations are simplified considerably and that (in most cases) little ancillary information on the EC sites is required. It is important to keep in mind that these simplifications go hand in hand with critical limitations. All derived variables are bulk ecosystem characteristics and have to be interpreted as such. It is for example not possible to infer within-canopy variations of a certain property.","category":"page"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"Please also keep in mind that the bigleaf.jl package does NOT provide formulations for bottom-up modelling. The principle applied here is to use an inversion approach in which ecosystem properties are inferred top-down from the measured fluxes. Such an inversion can, in principle, be also be conducted with more complex models (e.g. sun/shade or canopy/soil models), but keep in mind that these approaches also require that the additional, site-specific parameters are adequately well known. ","category":"page"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"The use of more detailed models is not within the scope of the bigleaf.jl package, but it is preferable to use such approaches when important assumptions of the \"big-leaf\" approach are not met. This is the case in particular when the ecosystem is sparsely covered with vegetation (low LAI, e.g. sparse crops, some savanna systems). ","category":"page"},{"location":"walkthrough/#Installation-and-Loading","page":"Walkthrough","title":"Installation and Loading","text":"","category":"section"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"The bigleaf.jl R package can be installed with the usual command once:","category":"page"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"using Pkg\nPkg.add(bigleaf)","category":"page"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"And then importet to the every Julia session by:","category":"page"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"using bigleaf","category":"page"},{"location":"walkthrough/#Preparing-the-data","page":"Walkthrough","title":"Preparing the data","text":"","category":"section"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"In this tutorial, we will work with a dataset from the eddy covariance site Tharandt (DE-Tha), a spruce forest in Eastern Germany. The DataFrame DE_Tha_Jun_2014 is downloaded from the bigleaf  R package repository and contains half-hourly data of meteorological and flux measurements made in June 2014:","category":"page"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"using Latexify, DataFrames\nusing DataDeps\nusing RData\nimport CodecBzip2, CodecXz\nregister(DataDep(\n    \"DE_Tha_Jun_2014.rda\",\n    \"downloading exampple dataset DE_Tha_Jun_2014 from bitbucket.org/juergenknauer/bigleaf\",\n    \"https://bitbucket.org/juergenknauer/bigleaf/raw/0ebe11626b4409305951e8add9f6436703c82584/data/DE_Tha_Jun_2014.rda\",\n    \"395f02e1a1a2d175ac7499c200d9d48b1cb58ff4755dfd2d7fe96fd18258d73c\"\n))\n#println(datadep\"DE_Tha_Jun_2014.rda\")\nENV[\"DATADEPS_ALWAYS_ACCEPT\"]=\"true\" # avoid question to download\nDE_Tha_Jun_2014 = first(values(load(joinpath(datadep\"DE_Tha_Jun_2014.rda/DE_Tha_Jun_2014.rda\"))))\nnothing","category":"page"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"# downloading and caching code not shown\ntha = DE_Tha_Jun_2014\nmdtable(select(describe(tha), :variable, :eltype, :min, :max), latex=false) # hide","category":"page"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"And the first six rows of tha:","category":"page"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"mdtable(tha[1:6,:],latex=false) # hide","category":"page"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"We give the data.frame a shorter name here. More information on the data (e.g. meaning of column names and units) can be found at the  bigleaf R package.  For more information on the site see e.g. Grünwald & Bernhofer 2007. In addition, we will need some ancillary data for this site throughout this tutorial. To ensure consistency, we define them here at the beginning:","category":"page"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"LAI = 7.6   # leaf area index\nzh  = 26.5  # average vegetation height (m)\nzr  = 42    # sensor height (m)\nDl  = 0.01  # leaf characteristic dimension (m)\nnothing # hide","category":"page"},{"location":"walkthrough/#General-guidelines-on-package-usage","page":"Walkthrough","title":"General guidelines on package usage","text":"","category":"section"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"There are a few general guidelines that are important to consider when using the bigleaf.jl package. ","category":"page"},{"location":"walkthrough/#Units","page":"Walkthrough","title":"Units","text":"","category":"section"},{"location":"walkthrough/","page":"Walkthrough","title":"Walkthrough","text":"It is imperative that variables are provided in the right units, as the plausibility of the input units is not checked in most cases. The required units of the input arguments can be found in the respective help file of the function. The good news is that units do not change across functions. For example, pressure is always required in kPa, and temperature always in °c.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = bigleaf","category":"page"},{"location":"#bigleaf","page":"Home","title":"bigleaf","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for bigleaf.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"index.md\",]","category":"page"},{"location":"#Meteorological-variables","page":"Home","title":"Meteorological variables","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"metorological_variables.md\",]","category":"page"},{"location":"#Unit-conversions","page":"Home","title":"Unit conversions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"unit_conversions.md\",]","category":"page"},{"location":"autodocs/","page":"Index","title":"Index","text":"CurrentModule = bigleaf","category":"page"},{"location":"autodocs/#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"autodocs/","page":"Index","title":"Index","text":"","category":"page"},{"location":"autodocs/#Autodocs","page":"Index","title":"Autodocs","text":"","category":"section"},{"location":"autodocs/","page":"Index","title":"Index","text":"Modules = [bigleaf]","category":"page"},{"location":"autodocs/#bigleaf.ET_to_LE-Tuple{Any, Any}","page":"Index","title":"bigleaf.ET_to_LE","text":"LE_to_ET(LE,Tair)\nET_to_LE(ET,Tair)\n\nConvert evaporative water flux from mass (ET=evapotranspiration)              to energy (LE=latent heat flux) units, or vice versa.\n\nArguments\n\nLE   Latent heat flux (W m-2)\nET   Evapotranspiration (kg m-2 s-1)\nTair Air temperature (deg C)\n\nDetails\n\nThe conversions are given by:\n\nET = LElambda\nLE = lambda ET\n\nwhere lambda is the latent heat of vaporization (J kg-1) as calculated by latent_heat_vaporization.\n\nExamples\n\n# LE of 200 Wm-2 and air temperature of 25degC\nLE_to_ET(200,25)\n\nx = linspace(-π, π) # hide\nplot(x, f(x), color = \"red\")\nsavefig(\"f-plot.svg\"); \n\n\n\n\n\n","category":"method"},{"location":"autodocs/#bigleaf.Esat_from_Tair-Tuple{Any}","page":"Index","title":"bigleaf.Esat_from_Tair","text":"Esat_slope(Tair; formula, constants) \nEsat_from_Tair(Tair; formula, constants) \nEsat_from_Tair_deriv(Tair; formula, constants)\n\nSaturation Vapor Pressure (Esat) and Slope of the Esat Curve\n\nArguemtns\n\nTair:      Air temperature (deg C)\nformula=Val(:Sonntag_1990):   Formula to be used. Either   Val(:Sonntag_1990) (Default), Val(:Alduchov_1996, or Val(:Allen_1998).\nconstants=bigleaf_constants(): Dictionary with entry  :Pa2kPa -  conversion pascal (Pa) to kilopascal\n\nDetails\n\nEsat (kPa) is calculated using the Magnus equation:\n\nEsat = a * exp((b * Tair) / (c + Tair)) / 1000 where the coefficients a, b, c take different values depending on the formula use The default values are from Sonntag 1990 (a=611.2, b=17.62, c=243.12). This versi of the Magnus equation is recommended by the WMO (WMO 2008; p1.4-29). Alternativel parameter values determined by Alduchov & Eskridge 1996 or Allen et al. 1998 can b used (see references). The slope of the Esat curve (Delta) is calculated as the first derivative of the function:\n\nDelta = dEsat over dTair\n\nValue\n\nEsat_from_Tair: Saturation vapor pressure (kPa)\nEsat_from_Tair_deriv: Slope of the saturation vapor pressure curve (kPa K-1)\nEsat_slope: A tuple of the two above values\n\nReferences\n\nSonntag D. 1990: Important new values of the physical constants of 1986, vapor  pressure formulations based on the ITS-90 and psychrometric formulae.  Zeitschrift fuer Meteorologie 70, 340-344.\n\nWorld Meteorological Organization 2008: Guide to Meteorological Instruments and Methods of Observation (WMO-No.8). World Meteorological Organization, Geneva. 7th Edition,\n\nAlduchov, O. A. & Eskridge, R. E., 1996: Improved Magnus form approximation of  saturation vapor pressure. Journal of Applied Meteorology, 35, 601-609\n\nAllen, R.G., Pereira, L.S., Raes, D., Smith, M., 1998: Crop evapotranspiration - Guidelines for computing crop water requirements - FAO irrigation and drainage paper 56, FAO, Rome.\n\nEsat_from_Tair(20.0)          # Esat in kPa\nEsat_from_Tair_deriv(20.0)    # its derivative to temperature in kPa K-1\nEsat_slope(20.0)              # both as a tuple\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#bigleaf.Esat_from_Tair_deriv-Tuple{Any}","page":"Index","title":"bigleaf.Esat_from_Tair_deriv","text":"Esat_slope(Tair; formula, constants) \nEsat_from_Tair(Tair; formula, constants) \nEsat_from_Tair_deriv(Tair; formula, constants)\n\nSaturation Vapor Pressure (Esat) and Slope of the Esat Curve\n\nArguemtns\n\nTair:      Air temperature (deg C)\nformula=Val(:Sonntag_1990):   Formula to be used. Either   Val(:Sonntag_1990) (Default), Val(:Alduchov_1996, or Val(:Allen_1998).\nconstants=bigleaf_constants(): Dictionary with entry  :Pa2kPa -  conversion pascal (Pa) to kilopascal\n\nDetails\n\nEsat (kPa) is calculated using the Magnus equation:\n\nEsat = a * exp((b * Tair) / (c + Tair)) / 1000 where the coefficients a, b, c take different values depending on the formula use The default values are from Sonntag 1990 (a=611.2, b=17.62, c=243.12). This versi of the Magnus equation is recommended by the WMO (WMO 2008; p1.4-29). Alternativel parameter values determined by Alduchov & Eskridge 1996 or Allen et al. 1998 can b used (see references). The slope of the Esat curve (Delta) is calculated as the first derivative of the function:\n\nDelta = dEsat over dTair\n\nValue\n\nEsat_from_Tair: Saturation vapor pressure (kPa)\nEsat_from_Tair_deriv: Slope of the saturation vapor pressure curve (kPa K-1)\nEsat_slope: A tuple of the two above values\n\nReferences\n\nSonntag D. 1990: Important new values of the physical constants of 1986, vapor  pressure formulations based on the ITS-90 and psychrometric formulae.  Zeitschrift fuer Meteorologie 70, 340-344.\n\nWorld Meteorological Organization 2008: Guide to Meteorological Instruments and Methods of Observation (WMO-No.8). World Meteorological Organization, Geneva. 7th Edition,\n\nAlduchov, O. A. & Eskridge, R. E., 1996: Improved Magnus form approximation of  saturation vapor pressure. Journal of Applied Meteorology, 35, 601-609\n\nAllen, R.G., Pereira, L.S., Raes, D., Smith, M., 1998: Crop evapotranspiration - Guidelines for computing crop water requirements - FAO irrigation and drainage paper 56, FAO, Rome.\n\nEsat_from_Tair(20.0)          # Esat in kPa\nEsat_from_Tair_deriv(20.0)    # its derivative to temperature in kPa K-1\nEsat_slope(20.0)              # both as a tuple\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#bigleaf.Esat_slope-Tuple{Number}","page":"Index","title":"bigleaf.Esat_slope","text":"Esat_slope(Tair; formula, constants) \nEsat_from_Tair(Tair; formula, constants) \nEsat_from_Tair_deriv(Tair; formula, constants)\n\nSaturation Vapor Pressure (Esat) and Slope of the Esat Curve\n\nArguemtns\n\nTair:      Air temperature (deg C)\nformula=Val(:Sonntag_1990):   Formula to be used. Either   Val(:Sonntag_1990) (Default), Val(:Alduchov_1996, or Val(:Allen_1998).\nconstants=bigleaf_constants(): Dictionary with entry  :Pa2kPa -  conversion pascal (Pa) to kilopascal\n\nDetails\n\nEsat (kPa) is calculated using the Magnus equation:\n\nEsat = a * exp((b * Tair) / (c + Tair)) / 1000 where the coefficients a, b, c take different values depending on the formula use The default values are from Sonntag 1990 (a=611.2, b=17.62, c=243.12). This versi of the Magnus equation is recommended by the WMO (WMO 2008; p1.4-29). Alternativel parameter values determined by Alduchov & Eskridge 1996 or Allen et al. 1998 can b used (see references). The slope of the Esat curve (Delta) is calculated as the first derivative of the function:\n\nDelta = dEsat over dTair\n\nValue\n\nEsat_from_Tair: Saturation vapor pressure (kPa)\nEsat_from_Tair_deriv: Slope of the saturation vapor pressure curve (kPa K-1)\nEsat_slope: A tuple of the two above values\n\nReferences\n\nSonntag D. 1990: Important new values of the physical constants of 1986, vapor  pressure formulations based on the ITS-90 and psychrometric formulae.  Zeitschrift fuer Meteorologie 70, 340-344.\n\nWorld Meteorological Organization 2008: Guide to Meteorological Instruments and Methods of Observation (WMO-No.8). World Meteorological Organization, Geneva. 7th Edition,\n\nAlduchov, O. A. & Eskridge, R. E., 1996: Improved Magnus form approximation of  saturation vapor pressure. Journal of Applied Meteorology, 35, 601-609\n\nAllen, R.G., Pereira, L.S., Raes, D., Smith, M., 1998: Crop evapotranspiration - Guidelines for computing crop water requirements - FAO irrigation and drainage paper 56, FAO, Rome.\n\nEsat_from_Tair(20.0)          # Esat in kPa\nEsat_from_Tair_deriv(20.0)    # its derivative to temperature in kPa K-1\nEsat_slope(20.0)              # both as a tuple\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#bigleaf.LE_to_ET-Tuple{Any, Any}","page":"Index","title":"bigleaf.LE_to_ET","text":"LE_to_ET(LE,Tair)\nET_to_LE(ET,Tair)\n\nConvert evaporative water flux from mass (ET=evapotranspiration)              to energy (LE=latent heat flux) units, or vice versa.\n\nArguments\n\nLE   Latent heat flux (W m-2)\nET   Evapotranspiration (kg m-2 s-1)\nTair Air temperature (deg C)\n\nDetails\n\nThe conversions are given by:\n\nET = LElambda\nLE = lambda ET\n\nwhere lambda is the latent heat of vaporization (J kg-1) as calculated by latent_heat_vaporization.\n\nExamples\n\n# LE of 200 Wm-2 and air temperature of 25degC\nLE_to_ET(200,25)\n\nx = linspace(-π, π) # hide\nplot(x, f(x), color = \"red\")\nsavefig(\"f-plot.svg\"); \n\n\n\n\n\n","category":"method"},{"location":"autodocs/#bigleaf.PPFD_to_Rg","page":"Index","title":"bigleaf.PPFD_to_Rg","text":"Rg_to_PPFD(Rg,J_to_mol=4.6,frac_PAR=0.5)\nPPFD_to_Rg(PPFD,J_to_mol=4.6,frac_PAR=0.5)\n\nConversions between Global Radiation (W m-2) and Photosynthetic Photon Flux  Density (umol m-2 s-1)\n\nArguments\n\nRg:       Global radiation = incoming short-wave radiation at the surface (W m-2)\nPPFD:     Photosynthetic photon flux density (umol m-2 s-1)\nJtomol: Conversion factor from J m-2 s-1 (= W m-2) to umol (quanta) m-2 s-1\nfrac_PAR: Fraction of incoming solar irradiance that is photosynthetical-           active radiation (PAR); defaults to 0.5\n\nDetails\n\nThe conversion is given by:\n\nPPFD = Rg * frac_PAR * J_to_mol\n\nby default, the combined conversion factor (frac_PAR * J_to_mol) is 2.3\n\nExamples\n\n# convert a measured incoming short-wave radiation of 500 Wm-2 to\n# PPFD in umol m-2 s-1 and backwards\nRg_to_PPFD(500)\nPPFD_to_Rg(1150)\n\n\n\n\n\n","category":"function"},{"location":"autodocs/#bigleaf.Rg_to_PPFD","page":"Index","title":"bigleaf.Rg_to_PPFD","text":"Rg_to_PPFD(Rg,J_to_mol=4.6,frac_PAR=0.5)\nPPFD_to_Rg(PPFD,J_to_mol=4.6,frac_PAR=0.5)\n\nConversions between Global Radiation (W m-2) and Photosynthetic Photon Flux  Density (umol m-2 s-1)\n\nArguments\n\nRg:       Global radiation = incoming short-wave radiation at the surface (W m-2)\nPPFD:     Photosynthetic photon flux density (umol m-2 s-1)\nJtomol: Conversion factor from J m-2 s-1 (= W m-2) to umol (quanta) m-2 s-1\nfrac_PAR: Fraction of incoming solar irradiance that is photosynthetical-           active radiation (PAR); defaults to 0.5\n\nDetails\n\nThe conversion is given by:\n\nPPFD = Rg * frac_PAR * J_to_mol\n\nby default, the combined conversion factor (frac_PAR * J_to_mol) is 2.3\n\nExamples\n\n# convert a measured incoming short-wave radiation of 500 Wm-2 to\n# PPFD in umol m-2 s-1 and backwards\nRg_to_PPFD(500)\nPPFD_to_Rg(1150)\n\n\n\n\n\n","category":"function"},{"location":"autodocs/#bigleaf.VPD_to_rH-Tuple{Any, Any}","page":"Index","title":"bigleaf.VPD_to_rH","text":"VPD_to_rH(VPD,Tair; ...)\nH_to_VPD(rH,Tair; ...)\ne_to_rH(e,Tair; ...)\nVPD_to_e(VPD,Tair; ...)\ne_to_VPD(e,Tair; ...)\ne_to_q(e,pressure; ...)\nq_to_e(q,pressure; ...)\nq_to_VPD(q,Tair,pressure; ...)\nVPD_to_q(VPD,Tair,pressure; ...)\n\nConversion between vapor pressure (e), vapor pressure deficit (VPD),              specific humidity (q), and relative humidity (rH).\n\nArguments\n\nTair:      Air temperature (deg C)\npressure:  Atmospheric pressure (kPa)\ne:         Vapor pressure (kPa)\nq:        Specific humidity (kg kg-1)\nVPD:       Vapor pressure deficit (kPa)\nrH:        Relative humidity (-)\n\nAll functions accept the optional arguemtns:\n\nEsat_formula: formula used in Esat_from_Tair\nconstants: dictionary from bigleaf_constants with entries eps and Pa2kPa\n\nRreferences\n\nFoken, T, 2008: Micrometeorology_ Springer, Berlin, Germany.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#bigleaf.bigleaf_constants-Tuple{}","page":"Index","title":"bigleaf.bigleaf_constants","text":"bigleaf_constants(;...)\n\nConstants Used in the bigleaf.jl Package\n\nReturn a Dictionary Dict{Symbol, Real}. Default values can be overridden by the named arguments:\n\ncp           Specific heat of air for constant pressure (J K-1 kg-1)\nRgas         Universal gas constant (J mol-1 K-1)\nRv           Gas constant of water vapor (J kg-1 K-1) (Stull 1988 p.641)\nRd           Gas constant of dry air (J kg-1 K-1) (Foken p. 245)\nMd           Molar mass of dry air (kg mol-1)\nMw           Molar mass of water vapor (kg mol-1)\neps          Ratio of the molecular weight of water vapor to dry air (=Mw/Md)\ng            Gravitational acceleration (m s-2)\nsolar_constant Solar constant (W m-2)\npressure0    Reference atmospheric pressure at sea level (Pa)\nTair0        Reference air temperature (K)\nk            von Karman constant\nCmol         Molar mass of carbon (kg mol-1)\nOmol         Molar mass of oxygen (kg mol-1)\nH2Omol       Molar mass of water (kg mol-1)\nsigma        Stefan-Boltzmann constant (W m-2 K-4)\nPr           Prandtl number\nSc_CO2       Schmidt number for CO2\nKelvin       Conversion degree Celsius to Kelvin\nDwDc         Ratio of the molecular diffusivities for water vapor and CO2\ndays2seconds Seconds per day\nkPa2Pa       Conversion kilopascal (kPa) to pascal (Pa)\nPa2kPa       Conversion pascal (Pa) to kilopascal (kPa)\numol2mol     Conversion micromole (umol) to mole (mol)\nmol2umol     Conversion mole (mol) to micromole (umol)\nkg2g         Conversion kilogram (kg) to gram (g)\ng2kg         Conversion gram (g) to kilogram (kg)\nkJ2J         Conversion kilojoule (kJ) to joule (J)\nJ2kJ         Conversion joule (J) to kilojoule (kJ)\nse_median    Conversion standard error (SE) of the mean to SE of the median\nfrac2percent Conversion between fraction and percent\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#bigleaf.gC_to_umolCO2-Tuple{Any}","page":"Index","title":"bigleaf.gC_to_umolCO2","text":"umolCO2_to_gC(CO2_flux; constants=bigleaf_constants())\ngC_to_umolCO2(C_flux; constants=bigleaf_constants())\n\nConvert CO2 quantities from (umol CO2 m-2 s-1) to (g C m-2 d-1) and vice versa.\n\nArguments\n\nCO2_flux  CO2 flux (umol CO2 m-2 s-1)\nC_flux    Carbon (C) flux (gC m-2 d-1)\nconstants: dictionary from bigleaf_constants with entries: Cmol, umol2mol, mol2umol, kg2g, g2kg, says2seconds\n\nExamples\n\numolCO2_to_gC(20)  # gC m-2 d-1\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#bigleaf.kg_to_mol","page":"Index","title":"bigleaf.kg_to_mol","text":"kg_to_mol(mass, molarMass=bigleaf_constants()[:H2Omol])\n\nConversion between Mass (kg) and Molar Units (mol).\n\n\n\n\n\n","category":"function"},{"location":"autodocs/#bigleaf.latent_heat_vaporization-Tuple{Any}","page":"Index","title":"bigleaf.latent_heat_vaporization","text":"latent_heat_vaporization(Tair)\n\n\nLatent heat of vaporization as a function of air temperature using \n\nlambda = (2501 - 000237  Tair) 10^6.\n\nArguments:\n\nTair:  Air temperature (deg C)\n\nValue\n\nlambda: Latent heat of vaporization (J kg-1) \n\nReferences\n\nStull, B, 1988: An Introduction to Boundary Layer Meteorology (p641)           Kluwer Academic Publishers, Dordrecht, Netherlands            \nFoken, T, 2008: Micrometeorology_ Springer, Berlin, Germany\n\nlatent_heat_vaporization.(range(5,45,5))        \n\n\n\n\n\n","category":"method"},{"location":"autodocs/#bigleaf.mol_to_ms-Tuple{Any, Any, Any}","page":"Index","title":"bigleaf.mol_to_ms","text":"ms_to_mol(G_ms,Tair,pressure; constants=bigleaf_constants())\nmol_to_ms(G_mol,Tair,pressure; constants=bigleaf_constants())\n\nConverts conductances from mass (m s-1) to molar units (mol m-2 s-1), or vice versa\n\nDetails\n\nThe conversions are given by\n\nG_mol = G_ms   pressure  (Rgas  Tair)\nG_ms = G_mol   (Rgas  Tair)  pressure\n\nwhere Tair is in Kelvin and pressure in Pa (converted from kPa internally).\n\nReferences\n\nJones, HG 1992_ Plants and microclimate: a quantitative approach to    environmental plant physiology_   2nd Edition, Cambridge University Press, Cambridge 428 \n\nms_to_mol(0.005,25,100)\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#bigleaf.ms_to_mol-Tuple{Any, Any, Any}","page":"Index","title":"bigleaf.ms_to_mol","text":"ms_to_mol(G_ms,Tair,pressure; constants=bigleaf_constants())\nmol_to_ms(G_mol,Tair,pressure; constants=bigleaf_constants())\n\nConverts conductances from mass (m s-1) to molar units (mol m-2 s-1), or vice versa\n\nDetails\n\nThe conversions are given by\n\nG_mol = G_ms   pressure  (Rgas  Tair)\nG_ms = G_mol   (Rgas  Tair)  pressure\n\nwhere Tair is in Kelvin and pressure in Pa (converted from kPa internally).\n\nReferences\n\nJones, HG 1992_ Plants and microclimate: a quantitative approach to    environmental plant physiology_   2nd Edition, Cambridge University Press, Cambridge 428 \n\nms_to_mol(0.005,25,100)\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#bigleaf.umolCO2_to_gC-Tuple{Any}","page":"Index","title":"bigleaf.umolCO2_to_gC","text":"umolCO2_to_gC(CO2_flux; constants=bigleaf_constants())\ngC_to_umolCO2(C_flux; constants=bigleaf_constants())\n\nConvert CO2 quantities from (umol CO2 m-2 s-1) to (g C m-2 d-1) and vice versa.\n\nArguments\n\nCO2_flux  CO2 flux (umol CO2 m-2 s-1)\nC_flux    Carbon (C) flux (gC m-2 d-1)\nconstants: dictionary from bigleaf_constants with entries: Cmol, umol2mol, mol2umol, kg2g, g2kg, says2seconds\n\nExamples\n\numolCO2_to_gC(20)  # gC m-2 d-1\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#bigleaf.virtual_temp-Tuple{Any, Any, Any}","page":"Index","title":"bigleaf.virtual_temp","text":"virtual_temp(Tair, pressure, VPD; Esat_formula, constants)\n\n\nVirtual temperature, defined as the temperature at which dry air would have the same              density as moist air at its actual temperature.\n\nArguments\n\nTair:      Air temperature (deg C)\npressure:  Atmospheric pressure (kPa)\nVPD:       Vapor pressure deficit (kPa)\nEsat_formula: formula used in Esat_from_Tair\nconstants Dictionary with entries\n:Kelvin - conversion degree Celsius to Kelvin\n:eps - ratio of the molecular weight of water vapor to dry air (-) \n\nDetails\n\nThe virtual temperature is given by:\n\nTv = Tair / (1 - (1 - eps) e/pressure)\n\nwhere Tair is in Kelvin (converted internally)_ Likewise, VPD is converted   to actual vapor pressure (e in kPa) with VPD_to_e internally.\n\nValue\n\nvirtual temperature (deg C)\n\nReferences\n\nMonteith JL, Unsworth MH, 2008: Principles of Environmental Physics.           3rd edition_ Academic Press, London.\n\nExamples\n\nvirtual_temp(25,100,1.5)                        \n\n\n\n\n\n","category":"method"}]
}
