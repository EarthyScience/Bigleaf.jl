using DataFrames, Pipe, Missings
using Dates, TimeZones
using Statistics

using Latexify
using DataDeps, Suppressor
using RData
import CodecBzip2, CodecXz
#@suppress_err # error in github-actions: GitHubActionsLogger has no field stream
register(DataDep(
    "DE_Tha_Jun_2014.rda",
    "downloading exampple dataset DE_Tha_Jun_2014 from bitbucket.org/juergenknauer/bigleaf",
    "https://bitbucket.org/juergenknauer/bigleaf/raw/0ebe11626b4409305951e8add9f6436703c82584/data/DE_Tha_Jun_2014.rda",
    "395f02e1a1a2d175ac7499c200d9d48b1cb58ff4755dfd2d7fe96fd18258d73c"
))
#println(datadep"DE_Tha_Jun_2014.rda")
ENV["DATADEPS_ALWAYS_ACCEPT"]="true" # avoid question to download
DE_Tha_Jun_2014 = first(values(load(joinpath(datadep"DE_Tha_Jun_2014.rda/DE_Tha_Jun_2014.rda"))))
nothing
tha = DE_Tha_Jun_2014
set_datetime_ydh!(tha)

thaf = copy(tha)
setinvalid_qualityflag!(thaf)
setinvalid_range!(thaf, 
     :PPFD => (200, Inf), 
     :ustar => (0.2, Inf), 
     :LE =>(0, Inf), 
     :VPD => (0.01, Inf)
     )
setinvalid_nongrowingseason!(thaf, 0.4)      
setinvalid_afterprecip!(thaf; min_precip=0.02, hours_after=24)


plot(first(tha, 48).ustar)

tha48 = DataFrame(
    datetime = ZonedDateTime("2014-06-01T00:00:00+00:00","yyyy-mm-ddTHH:MM:SSzzzz") .+ 
        (0:47) .* Minute(30),
    ustar = Union{Missing, Float64}[0.5400000214576721, 0.4900000095367432, 0.4799999892711639, 0.449999988079071, 0.5099999904632568, 0.4600000083446503, 0.5400000214576721, 0.5199999809265137, 0.4600000083446503, 0.4099999964237213, 0.5299999713897705, 0.5099999904632568, 0.5199999809265137, 0.4099999964237213, 0.5400000214576721, 0.4600000083446503, 0.5099999904632568, 0.5, 0.6299999952316284, 0.5799999833106995, 0.6800000071525574, 0.6499999761581421, 0.7400000095367432, 0.7300000190734863, 0.7699999809265137, 0.7400000095367432, 0.7799999713897705, 0.8700000047683716, 0.7799999713897705, 0.6700000166893005, 0.5600000023841858, 0.6600000262260437, 0.7099999785423279, 0.6100000143051147, 0.5899999737739563, 0.6100000143051147, 0.5299999713897705, 0.449999988079071, 0.3400000035762787, 0.3300000131130219, 0.3300000131130219, 0.3700000047683716, 0.3799999952316284, 0.3799999952316284, 0.3600000143051147, 0.3700000047683716, 0.3600000143051147, 0.3400000035762787],
    Tair = [11.88000011444092, 11.67000007629395, 11.1899995803833, 10.80000019073486, 10.67000007629395, 10.13000011444092, 9.779999732971191, 9.5, 9.09000015258789, 8.800000190734863, 8.6899995803833, 8.899999618530273, 9.430000305175781, 9.710000038146973, 10.55000019073486, 11.19999980926514, 11.72999954223633, 12.68000030517578, 13.1899995803833, 13.46000003814697, 14.1899995803833, 14.73999977111816, 14.65999984741211, 14.8100004196167, 15.02999973297119, 14.98999977111816, 14.77999973297119, 15.35000038146973, 15.5, 15.61999988555908, 15.47000026702881, 16.20000076293945, 16.13999938964844, 15.56999969482422, 15.14999961853027, 15.18000030517578, 14.81999969482422, 14.60000038146973, 14.10000038146973, 13.23999977111816, 12.65999984741211, 12.46000003814697, 12.09000015258789, 11.85999965667725, 11.72000026702881, 11.64000034332275, 11.52999973297119, 11.43000030517578],
    pressure = [97.63999938964844, 97.62999725341797, 97.61000061035156, 97.61000061035156, 97.61000061035156, 97.61000061035156, 97.61000061035156, 97.61000061035156, 97.62999725341797, 97.66000366210938, 97.66999816894531, 97.69000244140625, 97.69000244140625, 97.69999694824219, 97.70999908447266, 97.69999694824219, 97.7300033569336, 97.72000122070312, 97.70999908447266, 97.69999694824219, 97.69999694824219, 97.69999694824219, 97.69999694824219, 97.70999908447266, 97.70999908447266, 97.72000122070312, 97.70999908447266, 97.70999908447266, 97.69999694824219, 97.68000030517578, 97.68000030517578, 97.66999816894531, 97.68000030517578, 97.66999816894531, 97.66999816894531, 97.66000366210938, 97.6500015258789, 97.63999938964844, 97.63999938964844, 97.6500015258789, 97.66000366210938, 97.66999816894531, 97.69000244140625, 97.68000030517578, 97.68000030517578, 97.69000244140625, 97.69000244140625, 97.69000244140625],
    H = Union{Missing, Float64}[-68.18000030517578, -48.54000091552734, -59.09999847412109, -60.11000061035156, -59.40000152587891, -48.91999816894531, -53.52999877929688, -40.75, -29.28000068664551, -33.36999893188477, -9.050000190734863, 2.400000095367432, 38.29999923706055, 38.45000076293945, 85.08000183105469, 108.7799987792969, 176.6799926757812, 210.6900024414062, 230.0800018310547, 227.4199981689453, 321.6499938964844, 358.8999938964844, 329.9299926757812, 317.3099975585938, 375.1900024414062, 336.489990234375, 260.7099914550781, 360.6400146484375, 264.2200012207031, 185.3200073242188, 123.7699966430664, 236.0200042724609, 207.5200042724609, 128.3399963378906, 66.05999755859375, 79.6500015258789, 44.93999862670898, 16.22999954223633, -22.35000038146973, -29.10000038146973, -47.79999923706055, -63.61999893188477, -61.38000106811523, -65.11000061035156, -59.77000045776367, -60.52000045776367, -49.02999877929688, -53.45000076293945],
)

tha_heights = (
    LAI = 7.6,   # leaf area index
    zh  = 26.5,  # average vegetation height (m)
    zr  = 42,    # sensor height (m)
    Dl  = 0.01,  # leaf characteristic dimension (m)
)




show(thaf.H[1:48])

dfGPPd = @pipe tha |> 
    transform(_, :datetime => ByRow(yearmonthday) => :ymd, copycols = false) |>
    groupby(_, :ymd) |>
    combine(_, :datetime => (x -> Date(first(x))) => :date, :GPP => mean => :GPPd, ) 
    #x -> x[!,2]

show(dfGPPd.GPPd)


GPPd = [11.288497760271033, 13.013025930772224, 12.851774960756302, 11.996453734696843, 11.635422044472458, 11.155685572574535, 10.774393322790273, 10.181774605065584, 11.257192575993637, 12.9423423493281, 12.352468963712454, 13.402045020057509, 9.53826415212825, 12.071680051895479, 13.692589149111882, 12.845505638824156, 12.378533909407755, 11.672167064607493, 10.401156075240579, 10.705716138705611, 10.207347450816693, 11.052016352768987, 13.54435911634937, 12.060648361220956, 7.758974596237143, 9.869706534050541, 12.998054057980577, 10.627359564105669, 8.685295419767499, 10.874667977293333]

using Plots,StatsPlots
@df dfGPPd plot(:date, [:GPPd], xlab = "Date", ylab="GPP")
